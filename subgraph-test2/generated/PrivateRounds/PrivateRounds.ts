// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class InvestorClaimedTokens extends ethereum.Event {
  get params(): InvestorClaimedTokens__Params {
    return new InvestorClaimedTokens__Params(this);
  }
}

export class InvestorClaimedTokens__Params {
  _event: InvestorClaimedTokens;

  constructor(event: InvestorClaimedTokens) {
    this._event = event;
  }

  get roundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get investorAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class InvestorRefunded extends ethereum.Event {
  get params(): InvestorRefunded__Params {
    return new InvestorRefunded__Params(this);
  }
}

export class InvestorRefunded__Params {
  _event: InvestorRefunded;

  constructor(event: InvestorRefunded) {
    this._event = event;
  }

  get roundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class NewRoundCreated extends ethereum.Event {
  get params(): NewRoundCreated__Params {
    return new NewRoundCreated__Params(this);
  }
}

export class NewRoundCreated__Params {
  _event: NewRoundCreated;

  constructor(event: NewRoundCreated) {
    this._event = event;
  }

  get groupAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get roundId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get target(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get groupAllocation(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get startAt(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get endAt(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Pledged extends ethereum.Event {
  get params(): Pledged__Params {
    return new Pledged__Params(this);
  }
}

export class Pledged__Params {
  _event: Pledged;

  constructor(event: Pledged) {
    this._event = event;
  }

  get roundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoundCanceled extends ethereum.Event {
  get params(): RoundCanceled__Params {
    return new RoundCanceled__Params(this);
  }
}

export class RoundCanceled__Params {
  _event: RoundCanceled;

  constructor(event: RoundCanceled) {
    this._event = event;
  }

  get roundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RoundInfoChanged extends ethereum.Event {
  get params(): RoundInfoChanged__Params {
    return new RoundInfoChanged__Params(this);
  }
}

export class RoundInfoChanged__Params {
  _event: RoundInfoChanged;

  constructor(event: RoundInfoChanged) {
    this._event = event;
  }

  get groupAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get roundId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get roundTitle(): string {
    return this._event.parameters[2].value.toString();
  }

  get roundStory(): string {
    return this._event.parameters[3].value.toString();
  }

  get roundImageUrl(): string {
    return this._event.parameters[4].value.toString();
  }

  get roundInfoUrl(): string {
    return this._event.parameters[5].value.toString();
  }
}

export class TokensDeposited extends ethereum.Event {
  get params(): TokensDeposited__Params {
    return new TokensDeposited__Params(this);
  }
}

export class TokensDeposited__Params {
  _event: TokensDeposited;

  constructor(event: TokensDeposited) {
    this._event = event;
  }

  get roundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TokensWithdrawn extends ethereum.Event {
  get params(): TokensWithdrawn__Params {
    return new TokensWithdrawn__Params(this);
  }
}

export class TokensWithdrawn__Params {
  _event: TokensWithdrawn;

  constructor(event: TokensWithdrawn) {
    this._event = event;
  }

  get roundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TotalEthWithdrawn extends ethereum.Event {
  get params(): TotalEthWithdrawn__Params {
    return new TotalEthWithdrawn__Params(this);
  }
}

export class TotalEthWithdrawn__Params {
  _event: TotalEthWithdrawn;

  constructor(event: TotalEthWithdrawn) {
    this._event = event;
  }

  get roundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Unpledged extends ethereum.Event {
  get params(): Unpledged__Params {
    return new Unpledged__Params(this);
  }
}

export class Unpledged__Params {
  _event: Unpledged;

  constructor(event: Unpledged) {
    this._event = event;
  }

  get roundId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class PrivateRounds__roundsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: boolean;
  value6: BigInt;
  value7: Address;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: boolean,
    value6: BigInt,
    value7: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromAddress(this.value7));
    return map;
  }

  getTarget(): BigInt {
    return this.value0;
  }

  getGroupAllocation(): BigInt {
    return this.value1;
  }

  getTotalEthPledged(): BigInt {
    return this.value2;
  }

  getStartAt(): BigInt {
    return this.value3;
  }

  getEndAt(): BigInt {
    return this.value4;
  }

  getIsEthClaimed(): boolean {
    return this.value5;
  }

  getTotalTokensReceived(): BigInt {
    return this.value6;
  }

  getTokenAddress(): Address {
    return this.value7;
  }
}

export class PrivateRounds extends ethereum.SmartContract {
  static bind(address: Address): PrivateRounds {
    return new PrivateRounds("PrivateRounds", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MEMBER_ROLE(): Bytes {
    let result = super.call("MEMBER_ROLE", "MEMBER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MEMBER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MEMBER_ROLE", "MEMBER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  groupName(): string {
    let result = super.call("groupName", "groupName():(string)", []);

    return result[0].toString();
  }

  try_groupName(): ethereum.CallResult<string> {
    let result = super.tryCall("groupName", "groupName():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  numOfRounds(): BigInt {
    let result = super.call("numOfRounds", "numOfRounds():(uint32)", []);

    return result[0].toBigInt();
  }

  try_numOfRounds(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("numOfRounds", "numOfRounds():(uint32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pledgedAmounts(param0: BigInt, param1: Address): BigInt {
    let result = super.call(
      "pledgedAmounts",
      "pledgedAmounts(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_pledgedAmounts(
    param0: BigInt,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pledgedAmounts",
      "pledgedAmounts(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rounds(param0: BigInt): PrivateRounds__roundsResult {
    let result = super.call(
      "rounds",
      "rounds(uint256):(uint256,uint256,uint256,uint32,uint32,bool,uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new PrivateRounds__roundsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBoolean(),
      result[6].toBigInt(),
      result[7].toAddress()
    );
  }

  try_rounds(param0: BigInt): ethereum.CallResult<PrivateRounds__roundsResult> {
    let result = super.tryCall(
      "rounds",
      "rounds(uint256):(uint256,uint256,uint256,uint32,uint32,bool,uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PrivateRounds__roundsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBoolean(),
        value[6].toBigInt(),
        value[7].toAddress()
      )
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _groupCreator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _groupName(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelRoundCall extends ethereum.Call {
  get inputs(): CancelRoundCall__Inputs {
    return new CancelRoundCall__Inputs(this);
  }

  get outputs(): CancelRoundCall__Outputs {
    return new CancelRoundCall__Outputs(this);
  }
}

export class CancelRoundCall__Inputs {
  _call: CancelRoundCall;

  constructor(call: CancelRoundCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelRoundCall__Outputs {
  _call: CancelRoundCall;

  constructor(call: CancelRoundCall) {
    this._call = call;
  }
}

export class ChangeGroupInfoCall extends ethereum.Call {
  get inputs(): ChangeGroupInfoCall__Inputs {
    return new ChangeGroupInfoCall__Inputs(this);
  }

  get outputs(): ChangeGroupInfoCall__Outputs {
    return new ChangeGroupInfoCall__Outputs(this);
  }
}

export class ChangeGroupInfoCall__Inputs {
  _call: ChangeGroupInfoCall;

  constructor(call: ChangeGroupInfoCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _roundTitle(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _roundStory(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _roundImageUrl(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _roundInfoUrl(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class ChangeGroupInfoCall__Outputs {
  _call: ChangeGroupInfoCall;

  constructor(call: ChangeGroupInfoCall) {
    this._call = call;
  }
}

export class ClaimTokensCall extends ethereum.Call {
  get inputs(): ClaimTokensCall__Inputs {
    return new ClaimTokensCall__Inputs(this);
  }

  get outputs(): ClaimTokensCall__Outputs {
    return new ClaimTokensCall__Outputs(this);
  }
}

export class ClaimTokensCall__Inputs {
  _call: ClaimTokensCall;

  constructor(call: ClaimTokensCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimTokensCall__Outputs {
  _call: ClaimTokensCall;

  constructor(call: ClaimTokensCall) {
    this._call = call;
  }
}

export class CreateNewRoundCall extends ethereum.Call {
  get inputs(): CreateNewRoundCall__Inputs {
    return new CreateNewRoundCall__Inputs(this);
  }

  get outputs(): CreateNewRoundCall__Outputs {
    return new CreateNewRoundCall__Outputs(this);
  }
}

export class CreateNewRoundCall__Inputs {
  _call: CreateNewRoundCall;

  constructor(call: CreateNewRoundCall) {
    this._call = call;
  }

  get _target(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _groupAllocation(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _startAt(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _endAt(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _roundTitle(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _roundStory(): string {
    return this._call.inputValues[5].value.toString();
  }

  get _roundImageUrl(): string {
    return this._call.inputValues[6].value.toString();
  }

  get _roundInfoUrl(): string {
    return this._call.inputValues[7].value.toString();
  }
}

export class CreateNewRoundCall__Outputs {
  _call: CreateNewRoundCall;

  constructor(call: CreateNewRoundCall) {
    this._call = call;
  }
}

export class DepositTokensCall extends ethereum.Call {
  get inputs(): DepositTokensCall__Inputs {
    return new DepositTokensCall__Inputs(this);
  }

  get outputs(): DepositTokensCall__Outputs {
    return new DepositTokensCall__Outputs(this);
  }
}

export class DepositTokensCall__Inputs {
  _call: DepositTokensCall;

  constructor(call: DepositTokensCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DepositTokensCall__Outputs {
  _call: DepositTokensCall;

  constructor(call: DepositTokensCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class PledgeCall extends ethereum.Call {
  get inputs(): PledgeCall__Inputs {
    return new PledgeCall__Inputs(this);
  }

  get outputs(): PledgeCall__Outputs {
    return new PledgeCall__Outputs(this);
  }
}

export class PledgeCall__Inputs {
  _call: PledgeCall;

  constructor(call: PledgeCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PledgeCall__Outputs {
  _call: PledgeCall;

  constructor(call: PledgeCall) {
    this._call = call;
  }
}

export class RefundCall extends ethereum.Call {
  get inputs(): RefundCall__Inputs {
    return new RefundCall__Inputs(this);
  }

  get outputs(): RefundCall__Outputs {
    return new RefundCall__Outputs(this);
  }
}

export class RefundCall__Inputs {
  _call: RefundCall;

  constructor(call: RefundCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RefundCall__Outputs {
  _call: RefundCall;

  constructor(call: RefundCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class UnpledgeCall extends ethereum.Call {
  get inputs(): UnpledgeCall__Inputs {
    return new UnpledgeCall__Inputs(this);
  }

  get outputs(): UnpledgeCall__Outputs {
    return new UnpledgeCall__Outputs(this);
  }
}

export class UnpledgeCall__Inputs {
  _call: UnpledgeCall;

  constructor(call: UnpledgeCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UnpledgeCall__Outputs {
  _call: UnpledgeCall;

  constructor(call: UnpledgeCall) {
    this._call = call;
  }
}

export class WithdrawTokensCall extends ethereum.Call {
  get inputs(): WithdrawTokensCall__Inputs {
    return new WithdrawTokensCall__Inputs(this);
  }

  get outputs(): WithdrawTokensCall__Outputs {
    return new WithdrawTokensCall__Outputs(this);
  }
}

export class WithdrawTokensCall__Inputs {
  _call: WithdrawTokensCall;

  constructor(call: WithdrawTokensCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawTokensCall__Outputs {
  _call: WithdrawTokensCall;

  constructor(call: WithdrawTokensCall) {
    this._call = call;
  }
}

export class WithdrawTotalEthPledgedCall extends ethereum.Call {
  get inputs(): WithdrawTotalEthPledgedCall__Inputs {
    return new WithdrawTotalEthPledgedCall__Inputs(this);
  }

  get outputs(): WithdrawTotalEthPledgedCall__Outputs {
    return new WithdrawTotalEthPledgedCall__Outputs(this);
  }
}

export class WithdrawTotalEthPledgedCall__Inputs {
  _call: WithdrawTotalEthPledgedCall;

  constructor(call: WithdrawTotalEthPledgedCall) {
    this._call = call;
  }

  get _roundId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawTotalEthPledgedCall__Outputs {
  _call: WithdrawTotalEthPledgedCall;

  constructor(call: WithdrawTotalEthPledgedCall) {
    this._call = call;
  }
}
