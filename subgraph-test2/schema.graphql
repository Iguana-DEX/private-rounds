type GroupInfoChanged @entity(immutable: true) {
  id: Bytes!
  groupId: BigInt! # uint32
  groupName: String! # string
  groupDescription: String! # string
  groupImageUrl: String! # string
  groupInfoUrl: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewGroupCreated @entity(immutable: true) {
  id: Bytes!
  groupId: BigInt! # uint32
  groupAddress: Bytes! # address
  groupCreator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type InvestorClaimedTokens @entity(immutable: true) {
  id: Bytes!
  roundId: BigInt! # uint32
  investorAddress: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type InvestorRefunded @entity(immutable: true) {
  id: Bytes!
  roundId: BigInt! # uint32
  caller: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type NewRoundCreated @entity(immutable: true) {
  id: Bytes!
  groupAddress: Bytes! # address
  roundId: BigInt! # uint32
  target: BigInt! # uint256
  groupAllocation: BigInt! # uint256
  startAt: BigInt! # uint32
  endAt: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Pledged @entity(immutable: true) {
  id: Bytes!
  roundId: BigInt! # uint32
  caller: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoundCanceled @entity(immutable: true) {
  id: Bytes!
  roundId: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoundInfoChanged @entity(immutable: true) {
  id: Bytes!
  groupAddress: Bytes! # address
  roundId: BigInt! # uint32
  roundTitle: String! # string
  roundStory: String! # string
  roundImageUrl: String! # string
  roundInfoUrl: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokensDeposited @entity(immutable: true) {
  id: Bytes!
  roundId: BigInt! # uint32
  tokenAddress: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokensWithdrawn @entity(immutable: true) {
  id: Bytes!
  roundId: BigInt! # uint32
  tokenAddress: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TotalEthWithdrawn @entity(immutable: true) {
  id: Bytes!
  roundId: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpledged @entity(immutable: true) {
  id: Bytes!
  roundId: BigInt! # uint32
  caller: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
